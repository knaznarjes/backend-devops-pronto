# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/back_end

# Security Configuration
accessTokenSecret=test
refreshTokenSecret=test

# Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Health Probes Configuration
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoint.health.group.readiness.include=readinessState,mongo
management.endpoint.health.group.liveness.include=livenessState

# Enable Tomcat Metrics
server.tomcat.mbeanregistry.enabled=true

# Observation Configuration
management.observations.key-values.application=${spring.application.name}

# MongoDB Metrics
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.sla.http.server.requests=100ms,200ms,300ms

# Custom metrics tags
management.metrics.tags.env=${spring.profiles.active}

# Application Configuration
spring.application.name=back_end
server.port=9090

# Actuator Configuration
management.server.port=8086
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.health.enabled=true

# Metrics Configuration
management.metrics.tags.application=${spring.application.name}
management.metrics.enable.mongodb=true

# Désactiver la sécurité pour actuator
management.endpoints.security.enabled=false
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST

spring.profiles.active=dev